
          set -e
          set -x
          (
          ARCH=amd64

          # Run in noninteractive mode to avoid erroring when a config file preexists.
          export DEBIAN_FRONTEND=noninteractive

          sudo apt update -y

          # Our Debian packages have versions like "1.8.0-00" or "1.8.0-01". Do a prefix
          # search based on our SemVer to find the right (newest) package version.
          function getversion() {
              name=$1
              prefix=$2
              version=$(sudo apt-cache madison $name | awk '{ print $3 }' | grep ^$prefix | head -n1)
              if [[ -z "$version" ]]; then
                  echo Can\'t find package $name with prefix $prefix
                  exit 1
              fi
              echo $version
          }
          KUBELET=$(getversion kubelet ${KUBELET_VERSION}-)
          KUBECTL=$(getversion kubectl ${KUBELET_VERSION}-)
          KUBEADM=$(getversion kubeadm ${KUBELET_VERSION}-)

          # upgrade kubelet last, so that dependencies don't overwrite the patch version
          sudo -E apt upgrade -y --allow-downgrades kubectl=${KUBECTL}
          sudo -E apt upgrade -y --allow-downgrades kubeadm=${KUBEADM}
          sudo -E apt upgrade -y --allow-downgrades kubelet=${KUBELET}
          # curl kubeadm to make sure it matches the desired version
          sudo curl -o /usr/bin/kubeadm -sSL https://dl.k8s.io/release/v${CONTROL_PLANE_VERSION}/bin/linux/amd64/kubeadm
          sudo chmod a+rx /usr/bin/kubeadm

          sudo systemctl restart kubelet
          ) 2>&1 | sudo tee /var/log/upgrade.log
