
          set -e
          set -x
          (
          ARCH=amd64

          ${FUNCTIONS}

          # Need to have common_functions sourced first!
          if [[ -z "${MASTER_IP}" ]];then
            echo >&2 "Cannot continue. \$MASTER_IP is not set."
          fi

          if [[ -z "${CONTROL_PLANE_VERSION}" ]];then
            echo >&2 "Cannot continue. \$CONTROL_PLANE_VERSION is not set."
          fi

          if [[ -z "${TOKEN}" ]];then
            echo >&2 "Cannot continue. \$TOKEN is not set."
          fi

          if [[ -z "${POD_CIDR}" ]];then
            echo >&2 "Cannot continue. \$POD_CIDR is not set."
          fi

          if [[ -z "${CLUSTER_DNS_DOMAIN}" ]];then
            echo >&2 "Cannot continue. \$CLUSTER_DNS_DOMAIN is not set."
          fi

          if [[ -z "${SERVICE_CIDR}" ]];then
            echo >&2 "Cannot continue. \$SERVICE_CIDR is not set."
          fi

          CLUSTER_DNS_SERVER="$(prips "${SERVICE_CIDR}")"
          export CLUSTER_DNS_SERVER

          if ! install_docker; then
            echo >&2 "Error installing docker components..."
            exit 80
          fi

          if ! install_k8s_w_yum; then
            echo >&2 "Error installing Kubernetes components..."
            exit 81
          fi

          if ! configure_kubelet_systemd; then
            echo >&2 "Error configuring Kubernetes components..."
            exit 82
          fi

          if ! configure_kubeadm; then
            echo >&2 "Error configuring kubeadm componenets..."
            exit 83
          fi

          if run_kubeadm_join; then
            echo "Done..."
          else
            echo >&2 "Error occurred during Kubeadm join for client node."
            exit 84
          fi

          ) 2>&1 | sudo tee /var/log/startup.log
